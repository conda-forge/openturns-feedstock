From 5c3f7e7984526d5868ad42c474f479a5ea64a0f3 Mon Sep 17 00:00:00 2001
From: Julien Schueller <schueller@phimeca.com>
Date: Fri, 23 Nov 2018 10:07:52 +0100
Subject: [PATCH 1/2] Viewer: handle barplot fillstyle

---
 ChangeLog                                     |  2 +-
 lib/src/Base/Graph/DrawableImplementation.cxx |  2 +-
 python/src/viewer.py                          | 19 ++++++++++++-------
 3 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/lib/src/Base/Graph/DrawableImplementation.cxx b/lib/src/Base/Graph/DrawableImplementation.cxx
index 1e361e31a..0b59564eb 100644
--- a/lib/src/Base/Graph/DrawableImplementation.cxx
+++ b/lib/src/Base/Graph/DrawableImplementation.cxx
@@ -746,7 +746,7 @@ void DrawableImplementation::InitializeValidParameterList()
 
   /* Accepted fill styles */
   ValidFillStyles.setName("ValidFillStyles");
-  ValidFillStyles.add(ResourceMap::GetAsString("Drawable-DefaultFillStyle"));
+  ValidFillStyles.add("solid");
   ValidFillStyles.add("shaded");
 }
 
diff --git a/python/src/viewer.py b/python/src/viewer.py
index f461b30c5..13d6c0d81 100644
--- a/python/src/viewer.py
+++ b/python/src/viewer.py
@@ -322,8 +322,8 @@ def __init__(self,
                 if 'linestyle' in bar_kwargs_default:
                     bar_kwargs.pop('linestyle')
                 if ('linestyle' not in plot_kwargs_default) and ('ls' not in plot_kwargs_default):
-                    lineStyleDict = {'solid': 'solid', 'dashed': 'dashed', 'dotted':
-                                     'dotted', 'dotdash': 'dashdot', 'longdash': 'dashed', 'twodash': 'dashed'}
+                    lineStyleDict = {'solid': '-', 'dashed': '--', 'dotted': ':',
+                                     'dotdash': '-.', 'longdash': '--', 'twodash': '--'}
                     if drawable.getLineStyle() in lineStyleDict:
                         bar_kwargs['linestyle'] = lineStyleDict[
                             drawable.getLineStyle()]
@@ -331,15 +331,20 @@ def __init__(self,
                         warnings.warn(
                             '-- Unknown line style: ' + drawable.getLineStyle())
 
+                # fillstyle
+                if drawable.getFillStyle() == 'shaded':
+                    bar_kwargs['fill'] = False
+                    bar_kwargs['hatch'] = '////'
+                    bar_kwargs['edgecolor'] = bar_kwargs['color']
+
                 xi = drawable.getOrigin()
                 for i in range(x.getSize()):
-                    # label only the first bar to avoid getting several legend
-                    # items
+                    # label only the first bar to avoid getting several items
                     if (i == 1) and ('label' in bar_kwargs):
                         bar_kwargs.pop('label')
                     self._ax[0].bar(
-                        xi, height=y[i][0], width=x[i][0], **bar_kwargs)
-                    xi += x[i][0]
+                        xi, height=y[i,0], width=x[i,0], align='edge', **bar_kwargs)
+                    xi += x[i,0]
 
             elif drawableKind == 'Cloud':
                 plot_kwargs['linestyle'] = 'None'
@@ -493,7 +498,7 @@ def __init__(self,
                     elif positions[i] == 'bottom':
                         vertical = 'top'
                     self._ax[0].text(
-                        x[i][0], y[i][0], text, horizontalalignment=horizontal, verticalalignment=vertical, **text_kwargs)
+                        x[i,0], y[i,0], text, horizontalalignment=horizontal, verticalalignment=vertical, **text_kwargs)
 
             else:
                 raise ValueError(

From dcc81b09df98d032993738f01c22b53c7eaf53a2 Mon Sep 17 00:00:00 2001
From: Julien Schueller <schueller@phimeca.com>
Date: Fri, 23 Nov 2018 10:36:40 +0100
Subject: [PATCH 2/2] Sphinx: Python2 syntax in conf.py is deprecated

---
 python/doc/conf.py.in | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/python/doc/conf.py.in b/python/doc/conf.py.in
index 2efe62f6f..bd6a66c00 100644
--- a/python/doc/conf.py.in
+++ b/python/doc/conf.py.in
@@ -69,14 +69,14 @@ extensions.append('sphinx.ext.coverage')
 try:
     import sphinx.ext.imgmath
     extensions.append('sphinx.ext.imgmath')
-    imgmath_latex_preamble = "\usepackage{%smath_notations}" % (
+    imgmath_latex_preamble = r'\usepackage{{{0}math_notations}}'.format(
         os.path.dirname(__file__) + os.sep)
     imgmath_use_preview = True
     if subprocess.call('dvisvgm -V', shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE) == 0:
         imgmath_image_format = 'svg'
 except ImportError:
     extensions.append('sphinx.ext.pngmath')
-    pngmath_latex_preamble = "\usepackage{%smath_notations}" % (
+    pngmath_latex_preamble = r'\usepackage{{{0}math_notations}}'.format(
         os.path.dirname(__file__) + os.sep)
     # The next option is used for smart-alignment of math images on the text.
     # It only works when the preview-latex package is installed.
@@ -242,7 +242,7 @@ latex_elements = {
     # The font size ('10pt', '11pt' or '12pt').
     'pointsize': '10pt',
     # Additional stuff for the LaTeX preamble.
-    'preamble': '\usepackage{math_notations}',
+    'preamble': r'\usepackage{math_notations}',
 }
 
 latex_additional_files = ['math_notations.sty']
