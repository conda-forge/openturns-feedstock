From b105f322435c2743c6f903ee69180f1c04ea3857 Mon Sep 17 00:00:00 2001
From: Julien Schueller <schueller@phimeca.com>
Date: Tue, 5 Jun 2018 13:23:43 +0200
Subject: [PATCH 1/2] Fix Mesh::isRegular

Check the regularity of a mesh with a relative tolerance instead of
absolute, else the following mesh is not considered regular:

>>> import openturns as ot
>>> time_grid = ot.RegularGrid(0.0, 0.2, 40963)
>>> mesh = ot.Mesh(time_grid)
>>> print(mesh.isRegular())
---
 lib/etc/openturns.conf.in           | 2 +-
 lib/src/Base/Common/ResourceMap.cxx | 2 +-
 lib/src/Base/Geom/Mesh.cxx          | 7 ++++---
 python/test/t_Mesh_std.expout       | 1 +
 python/test/t_Mesh_std.py           | 5 +++++
 5 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/lib/etc/openturns.conf.in b/lib/etc/openturns.conf.in
index f5971257..25fc4853 100644
--- a/lib/etc/openturns.conf.in
+++ b/lib/etc/openturns.conf.in
@@ -242,7 +242,7 @@
   <Domain-SmallVolume   value="1.0e-12" />
 
   <!-- OT::Mesh parameters -->
-  <Mesh-VertexEpsilon   value="1.0e-12" />
+  <Mesh-VertexEpsilon   value="1.0e-6" />
   <Mesh-LargeSize       value="5000"    />
   <Mesh-BackfaceCulling value="false"   />
   <Mesh-DiffuseFactor   value="0.7"     />
diff --git a/lib/src/Base/Common/ResourceMap.cxx b/lib/src/Base/Common/ResourceMap.cxx
index 788dc1a6..0322b183 100644
--- a/lib/src/Base/Common/ResourceMap.cxx
+++ b/lib/src/Base/Common/ResourceMap.cxx
@@ -505,7 +505,7 @@ void ResourceMap::loadDefaultConfiguration()
   setAsScalar( "Domain-SmallVolume",   1.0e-12 );
 
   // Mesh parameters
-  setAsScalar( "Mesh-VertexEpsilon", 1.0e-12 );
+  setAsScalar( "Mesh-VertexEpsilon", 1.0e-6 );
   setAsUnsignedInteger( "Mesh-LargeSize", 5000 );
   setAsBool( "Mesh-BackfaceCulling", false );
   setAsScalar( "Mesh-DiffuseFactor", 0.7 );
diff --git a/lib/src/Base/Geom/Mesh.cxx b/lib/src/Base/Geom/Mesh.cxx
index 779c785b..238db856 100644
--- a/lib/src/Base/Geom/Mesh.cxx
+++ b/lib/src/Base/Geom/Mesh.cxx
@@ -374,10 +374,11 @@ Bool Mesh::isRegular() const
   Bool regular = true;
   const Scalar epsilon = ResourceMap::GetAsScalar("Mesh-VertexEpsilon");
   const Scalar step = vertices_(simplices_(0, 1), 0) - vertices_(simplices_(0, 0), 0);
-  for (UnsignedInteger i = 1; i < size; ++i)
+  const Scalar absStep = std::abs(step);
+  for (UnsignedInteger i = 1; (i < size) && regular; ++ i)
   {
-    regular = regular && (std::abs(vertices_(simplices_(i, 1), 0) - vertices_(simplices_(i, 0), 0) - step) < epsilon);
-    if (!regular) break;
+    const Scalar delta = vertices_(simplices_(i, 1), 0) - vertices_(simplices_(i, 0), 0);
+    regular = (std::abs(delta - step) <= absStep * epsilon);
   }
   return regular;
 }
diff --git a/python/test/t_Mesh_std.expout b/python/test/t_Mesh_std.expout
index 3a7cff1c..60514baa 100644
--- a/python/test/t_Mesh_std.expout
+++ b/python/test/t_Mesh_std.expout
@@ -46,3 +46,4 @@ P1 gram=
  [ 0          0.00277778 0          0.00277778 0.00138889 0.00833333 0.00416667 0.00138889 ]
  [ 0          0.00555556 0.00277778 0.00416667 0.00277778 0.00416667 0.0138889  0.00138889 ]
  [ 0          0          0          0.00138889 0          0.00138889 0.00138889 0.00277778 ]]
+True
diff --git a/python/test/t_Mesh_std.py b/python/test/t_Mesh_std.py
index 41d1c54a..02a6466a 100755
--- a/python/test/t_Mesh_std.py
+++ b/python/test/t_Mesh_std.py
@@ -96,3 +96,8 @@ rotation[0, 1] = m.sin(m.pi / 3.0)
 rotation[1, 0] = -m.sin(m.pi / 3.0)
 rotation[1, 1] = m.cos(m.pi / 3.0)
 rotation[2, 2] = 1.0
+
+# isregular bug
+time_grid = ot.RegularGrid(0.0, 0.2, 40963)
+mesh = ot.Mesh(time_grid)
+print(mesh.isRegular())
-- 
2.17.0

