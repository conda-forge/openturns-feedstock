diff --git a/Bonmin/examples/CppExample/MyBonmin.cpp b/Bonmin/examples/CppExample/MyBonmin.cpp
index 558bac5..bfbd1c3 100644
--- a/Bonmin/examples/CppExample/MyBonmin.cpp
+++ b/Bonmin/examples/CppExample/MyBonmin.cpp
@@ -53,21 +53,26 @@ int main (int argc, char *argv[])
   
   // Here we can change the default value of some Bonmin or Ipopt option
   bonmin.options()->SetNumericValue("bonmin.time_limit", 5); //changes bonmin's time limit
-  bonmin.options()->SetStringValue("mu_oracle","loqo");
+  // bonmin.options()->SetStringValue("mu_oracle","loqo");
   
   //Here we read several option files
-  bonmin.readOptionsFile("Mybonmin.opt");
-  bonmin.readOptionsFile();// This reads the default file "bonmin.opt"
+  // bonmin.readOptionsFile("Mybonmin.opt");
+  // bonmin.readOptionsFile();// This reads the default file "bonmin.opt"
   
   // Options can also be set by using a string with a format similar to the bonmin.opt file
   bonmin.readOptionsString("bonmin.algorithm B-BB\n");
   
   // Now we can obtain the value of the new option
-  int printSolution;
-  bonmin.options()->GetEnumValue("print_solution", printSolution,"");
-  if(printSolution == 1){
+  // int printSolution;
+  // bonmin.options()->GetEnumValue("print_solution", printSolution,"");
+  // if(printSolution == 1){
     tminlp->printSolutionAtEndOfAlgorithm();
-  }
+  // }
+
+  // extra options
+  bonmin.options()->SetStringValue("honor_original_bounds", "yes");
+  bonmin.options()->SetNumericValue("constr_viol_tol", 1e-5);
+  bonmin.options()->SetNumericValue("bound_relax_factor", 0.0);
 
   //Now initialize from tminlp
   bonmin.initialize(GetRawPtr(tminlp));
@@ -96,6 +101,9 @@ int main (int argc, char *argv[])
 	     <<E.message()<<std::endl;
   }
 
+  std::string optionsLog;
+  bonmin.options()->PrintList(optionsLog);
+  std::cout << optionsLog << std::endl;
 
   return 0;
 }
diff --git a/Bonmin/examples/CppExample/MyTMINLP.cpp b/Bonmin/examples/CppExample/MyTMINLP.cpp
index cf14b65..2df63f6 100644
--- a/Bonmin/examples/CppExample/MyTMINLP.cpp
+++ b/Bonmin/examples/CppExample/MyTMINLP.cpp
@@ -104,6 +104,8 @@ MyTMINLP::eval_f(Index n, const Number* x, bool new_x, Number& obj_value)
 {
   assert(n==4);
   obj_value = - x[0] - x[1] - x[2];
+    std::cout <<"MyTMINLP::eval_f x=" <<x[0] <<"; "<< x[1]  <<"; "<< x[2]<<"; "<<x[3]<<" y=" << obj_value<< std::endl<< std::flush;
+
   return true;
 }
 
